{"mappings":";;AAAA;AAEA,MAAM,sCAAgB;AAEtB,MAAM,oCAAc;AACpB,MAAM,oCAAc;AAEpB,IAAI,iCAAW;AACf,IAAI,iCAAW;AACf,IAAI,4BAAM;AAEV,IAAI,4BAAM,CAAA,GAAA,aAAM,AAAD,EAAE,gCAAU,gCAAU;AAErC,SAAS,iCAAW;IAClB,4BAAM,CAAA,GAAA,aAAM,AAAD,EAAE,gCAAU,gCAAU;IACjC,OAAO;AACT;AACA,SAAS,6BAAO,MAAc,EAAE;IAC9B,4BAAM;IACN;AACF;AACA,SAAS,kCAAY,WAAmB,EAAE;IACxC,iCAAW;IACX;AACF;AACA,SAAS,kCAAY,WAAmB,EAAE;IACxC,iCAAW;IACX;AACF;AACA,SAAS,uCAAiB,SAAwB,EAAqB;IACrE,OAAO,0BAAI,CAAA,GAAA,cAAO,AAAD,EAAE,gBAAgB,EAAE;QAAC;YAAE,WAAW;QAAU;KAAE;AACjE;AACA,SAAS,sCAAgB,SAAwB,EAAgB;IAC/D,MAAM,gBAAgB,IAAI;IAC1B,OAAO,0BAAI,CAAA,GAAA,cAAO,AAAD,EAAE,iBAAiB,EAAE;QACpC;YAAE,WAAW;QAAU;QACvB;KACD;AACH;AAEA,SAAS,+BAAS,IAAY,EAAgB;IAC5C,OAAO,0BAAI,CAAA,GAAA,cAAO,AAAD,EAAE,YAAY,EAAE;QAAC;KAAK;AACzC;AACA,SAAS,mCACP,SAAiB,GAAG,EACpB,qBAA8B,KAAK,EACrB;IACd,OAAO,0BAAI,CAAA,GAAA,cAAO,AAAD,EAAE,UAAU,EAAE;QAAC;QAAQ;KAAmB;AAC7D;AACA,SAAS,mCAAa;IACpB,OAAO,0BAAI,CAAA,GAAA,cAAO,AAAD,EAAE,aAAa,EAAE;QAAC,IAAI;KAAC;AAC1C;AAEA,SAAS,oCACP,OAAe,EACf,SAAiB,EACjB,OAAe,EACG;IAClB,MAAM,SAAS;QAAC;QAAS;QAAW;KAAQ;IAC5C,OAAO,0BAAI,CAAA,GAAA,cAAO,AAAD,EAAE,aAAa,EAAE;AACpC;AACA,SAAS,0CAAoB,SAAwB,EAAE;IACrD,IAAI,CAAC,aAAa,UAAU,MAAM,GAAG,GACnC,OAAO,CAAC;IAEV,MAAM,gBAAgB,KAAK;IAC3B,MAAM,SAAS;QAAC;YAAE,WAAW;QAAU;QAAG;KAAc;IACxD,OAAO,0BAAI,CAAA,GAAA,cAAO,AAAD,EAAE,iBAAiB,EAAE;AACxC;IACA,2CAAe;sBACb;kBACA;cACA;qBACA;gBACA;yBACA;iBAEA;iBACA;YACA;mBACA;iBAEA;iBACA;AACF","sources":["index.ts"],"sourcesContent":["import { getRPC, methods } from \"@ravenrebels/ravencoin-rpc\";\r\n\r\nconst ONE_FULL_COIN = 1e8;\r\n\r\nconst URL_MAINNET = \"https://rvn-rpc-mainnet.ting.finance/rpc\";\r\nconst URL_TESTNET = \"https://rvn-rpc-testnet.ting.finance/rpc\";\r\n\r\nlet username = \"anonymouse\";\r\nlet password = \"anonymous\";\r\nlet url = URL_MAINNET;\r\n\r\nlet rpc = getRPC(username, password, url);\r\n\r\nfunction resetRPC() {\r\n  rpc = getRPC(username, password, url);\r\n  return rpc;\r\n}\r\nfunction setURL(newURL: string) {\r\n  url = newURL;\r\n  resetRPC();\r\n}\r\nfunction setUsername(newUsername: string) {\r\n  username = newUsername;\r\n  resetRPC();\r\n}\r\nfunction setPassword(newPassword: string) {\r\n  password = newPassword;\r\n  resetRPC();\r\n}\r\nfunction getAddressDeltas(addresses: Array<string>): Promise < any[] > {\r\n  return rpc(methods.getaddressdeltas, [{ addresses: addresses }]);\r\n}\r\nfunction getAssetBalance(addresses: Array<string>): Promise<any> {\r\n  const includeAssets = true;\r\n  return rpc(methods.getaddressbalance, [\r\n    { addresses: addresses },\r\n    includeAssets,\r\n  ]);\r\n}\r\n\r\nfunction getAsset(name: string): Promise<any> {\r\n  return rpc(methods.getassetdata, [name]);\r\n}\r\nfunction getAllAssets(\r\n  prefix: string = \"*\",\r\n  includeAllMetaData: boolean = false\r\n): Promise<any> {\r\n  return rpc(methods.listassets, [prefix, includeAllMetaData]);\r\n}\r\nfunction getMempool() {\r\n  return rpc(methods.getrawmempool, [true]);\r\n}\r\n\r\nfunction verifyMessage(\r\n  address: string,\r\n  signature: string,\r\n  message: string\r\n): Promise<boolean> {\r\n  const params = [address, signature, message];\r\n  return rpc(methods.verifymessage, params);\r\n}\r\nfunction getRavencoinBalance(addresses: Array<string>) {\r\n  if (!addresses || addresses.length < 1) {\r\n    return {};\r\n  }\r\n  const includeAssets = false;\r\n  const params = [{ addresses: addresses }, includeAssets];\r\n  return rpc(methods.getaddressbalance, params);\r\n}\r\nexport default {\r\n  getAddressDeltas,\r\n  getAllAssets,\r\n  getAsset,\r\n  getAssetBalance,\r\n  getMempool,\r\n  getRavencoinBalance,\r\n\r\n  setUsername,\r\n  setPassword,\r\n  setURL,\r\n  verifyMessage,\r\n\r\n  URL_MAINNET,\r\n  URL_TESTNET,\r\n};\r\n"],"names":[],"version":3,"file":"index.mjs.map"}